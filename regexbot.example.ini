[regexbot]
; The server to connect to.
server = localhost
; The port to connect on.
port = 6667
; The nickname to use.
nick = regexbot
; The channels to use, one or more is accepted, separated by whitespace
channels = #regexbot #regexbot2
; NickServ password
;nickserv_pass = password
; You can also define another repository for your code and name of the bot.
; The git version string will be appended to this.
; version = regexbot; https://github.com/octocat/ircbots/

;; OTHER OPTIONS
; Set to "yes" to use an ipv6 connection, as opposed to an ipv4 connection.
; IPv4 is the default if ipv6 is not set.
ipv6 = no

; The bot has an internal "cooldown timer" which controls under what conditions
; it believes it is being flooded.  If someone messages a command to regexbot
; within this time after someone else has issued a command, they will be ignored
; and the cooldown timer is extended.  Which means that continually repeated
; attempts to command the bot to replace will just get dropped. There is a global
; cooldown and a channel cool down. Both must pass for a message to be processed.
; 
; You can tweak this to your liking, by default the channel cooldown is 5 seconds
; and the global cooldown is 1 second.  If you set either to 0, the cooldown timer
; will be effectively disabled.
channel_flood_cooldown = 5
global_flood_cooldown = 1

; The maximum amount of messages to keep in the internal stack.  More messages
; mean more memory usage.  When a message has it's contents modified by a regex,
; the original version is deleted, and the new version replaces it at the top
; of the stack.  Substitution is done on the newest messages first, and old
; messages are automatically removed from the stack
max_messages = 25

; The max message size limits the size beyond which messages are cut, both for
; storing and sending. The max irc message length is 510 bytes, so 450 is probably
; a safe limit. Setting to 200 since it meets most use cases.

max_messsage_size = 200

; Enables the translate feature, used by y/chars/replace_chars/. This replaces a
; char in chars with the respective char in replace_chars. Warning, this may not
; work well for strings with unicode.
translate_enabled = on

; Enables reconnect on connection loss. This is per-socket, so as a consequence,
; the bot will reconnect to channels that it may have previously been kicked from.
; (Obviously this won't affect bans).
reconnect_to_server = on

[ignore]
; Ignore list.  Just pop in any "key", and the value is the regular expression
; of the person's hostmask to ignore (case insensitive!)
;
; Be aware this only prevents them from issuing commands.
;
; eg:
;  1 = ^.*test.*\!.+$  -- blocks anyone with "test" in their nickname (case sensitive)
;  2 = ^.+@.*\.example\.com$ -- blocks anyone from the "example.com" domain
; Use an ipv6 connection, as opposed to an ipv4 connection. IPv4 is the default
;  3 =test            -- blocks anyone with "test" anywhere in their hostmask
;
; This ignore list defaults to being empty

